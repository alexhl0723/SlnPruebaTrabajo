@model IEnumerable<Capa_Models.ViewModels.TrabajadorVM>

@{
    ViewData["Title"] = "Listado de Trabajadores";
    var sexoSeleccionado = ViewBag.SexoSeleccionado as string;
}

<h2 class="mb-3 text-center">Listado de Trabajadores</h2>

<div class="d-flex align-items-center gap-3 mb-4">
    <button class="btn btn-success mb-3" id="btnAbrirModalCrear">+ Crear Trabajador</button>


    <form method="get" class="form-inline mb-0 w-25">
        <label class="mr-2">Filtrar por sexo:</label>
        <select name="sexo" class="form-control mr-2" onchange="this.form.submit()">
            <option value="">-- Todos --</option>
            <option value="M" selected="@(sexoSeleccionado == "M")">Masculino</option>
            <option value="F" selected="@(sexoSeleccionado == "F")">Femenino</option>
        </select>
    </form>
</div>

<style>
    .bg-orange-soft {
        background-color: #f6a554 !important;
        color: #333 !important;
    }
</style>

<table class="table table-bordered text-center align-middle">
    <thead class="thead-dark">
        <tr>
            <th>Tipo Documento</th>
            <th>Nro Documento</th>
            <th>Nombres</th>
            <th>Sexo</th>
            <th>Departamento</th>
            <th>Provincia</th>
            <th>Distrito</th>
            <th>Acción</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var colorClase = item.Sexo == "M" ? "bg-primary text-white" :
                             item.Sexo == "F" ? "bg-orange-soft" : "";

            <tr class="@colorClase">
                <td>@item.TipoDocumento</td>
                <td>@item.NumeroDocumento</td>
                <td>@item.Nombres</td>
                <td>@item.Sexo</td>
                <td>@item.NombreDepartamento</td>
                <td>@item.NombreProvincia</td>
                <td>@item.NombreDistrito</td>
                <td>
                    <button type="button"
                            class="btn btn-warning btn-sm text-dark font-weight-bold"
                            onclick="abrirModalEditar(@item.Id)">
                        Editar
                    </button>
                    <button type="button"
                            class="btn btn-danger btn-sm text-white font-weight-bold ml-1"
                            data-bs-toggle="modal"
                            data-bs-target="#deleteModal"
                            data-id="@item.Id"
                            data-nombre="@item.Nombres"
                            data-documento="@item.TipoDocumento @item.NumeroDocumento">
                        Eliminar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal de Eliminación -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Delete" method="post">
                <input type="hidden" name="id" id="deleteId" />
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirmar Eliminación</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas eliminar al trabajador <strong id="deleteNombre"></strong>?</p>
                    <p class="text-muted" id="deleteDocumento"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Sí, eliminar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- crear modal -->
<div class="modal fade" id="modalCrear" tabindex="-1" aria-labelledby="modalCrearLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Nuevo Trabajador</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="contenidoCrearTrabajador">
                <!-- aca carga -->
            </div>
        </div>
    </div>
</div>

<!-- editar modal -->
<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="modalEditarLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Editar Trabajador</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="contenidoEditarTrabajador">
                <!-- aca carga -->
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // crear
        $('#btnAbrirModalCrear').on('click', function () {
            $('#modalCrear').modal('show');
            $('#contenidoCrearTrabajador').load('/Trabajadores/Create', function () {
                cargarEventosCascada(); // para cargar los select
            });
        });

        $(document).on('submit', '#formCrearTrabajador', function (e) {
            e.preventDefault();

            const form = $(this);
            const data = form.serialize();

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: data,
                success: function () {
                    $('#modalCrear').modal('hide');
                    location.reload();
                },
                error: function () {
                    alert("Error al crear trabajador.");
                }
            });
        });

        function cargarEventosCascada() {
            $('#departamento').on('change', function () {
                const departamentoId = $(this).val();

                fetch(`/Trabajadores/GetProvincias?idDepartamento=${departamentoId}`)
                    .then(res => res.json())
                    .then(data => {
                        const $provincia = $('#provincia');
                        $provincia.html('<option value="">-- Selecciona Provincia --</option>');
                        $('#distrito').html('<option value="">-- Selecciona Distrito --</option>');

                        data.forEach(p => {
                            $provincia.append(`<option value="${p.id}">${p.nombreProvincia}</option>`);
                        });
                    });
            });

            $('#provincia').on('change', function () {
                const provinciaId = $(this).val();

                fetch(`/Trabajadores/GetDistritos?idProvincia=${provinciaId}`)
                    .then(res => res.json())
                    .then(data => {
                        const $distrito = $('#distrito');
                        $distrito.html('<option value="">-- Selecciona Distrito --</option>');

                        data.forEach(d => {
                            $distrito.append(`<option value="${d.id}">${d.nombreDistrito}</option>`);
                        });
                    });
            });
        }

        // editar
        function abrirModalEditar(id) {
            $('#modalEditar').modal('show');

            $('#contenidoEditarTrabajador').load(`/Trabajadores/Edit/${id}`, function (response, status, xhr) {
                if (status === "error") {
                    $('#contenidoEditarTrabajador').html(`<div class="text-danger">Error al cargar el formulario de edición.</div>`);
                } else {
                    cargarEventosCascadaEditar();
                }
            });
        }

        function cargarEventosCascadaEditar() {
            $('#IdDepartamento').on('change', function () {
                const id = $(this).val();

                fetch(`/Trabajadores/GetProvincias?idDepartamento=${id}`)
                    .then(res => res.json())
                    .then(data => {
                        const $provincia = $('#IdProvincia');
                        $provincia.html('<option value="">-- Selecciona Provincia --</option>');
                        $('#IdDistrito').html('<option value="">-- Selecciona Distrito --</option>');

                        data.forEach(p => {
                            $provincia.append(`<option value="${p.id}">${p.nombreProvincia}</option>`);
                        });
                    });
            });

            $('#IdProvincia').on('change', function () {
                const id = $(this).val();

                fetch(`/Trabajadores/GetDistritos?idProvincia=${id}`)
                    .then(res => res.json())
                    .then(data => {
                        const $distrito = $('#IdDistrito');
                        $distrito.html('<option value="">-- Selecciona Distrito --</option>');

                        data.forEach(d => {
                            $distrito.append(`<option value="${d.id}">${d.nombreDistrito}</option>`);
                        });
                    });
            });
        }

        $(document).on('submit', '#formEditarTrabajador', function (e) {
            e.preventDefault();

            const form = $(this);
            const data = form.serialize();

            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: data,
                success: function () {
                    $('#modalEditar').modal('hide');
                    location.reload();
                },
                error: function () {
                    alert("Error al guardar los cambios.");
                }
            });
        });

        // eliminar
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const nombre = button.getAttribute('data-nombre');
            const documento = button.getAttribute('data-documento');

            document.getElementById('deleteId').value = id;
            document.getElementById('deleteNombre').textContent = nombre;
            document.getElementById('deleteDocumento').textContent = documento;
        });
    </script>
}
